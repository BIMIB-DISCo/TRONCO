on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: check-master

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: macOS-latest, r: 'devel'}
          - {os: ubuntu-16.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          
      - uses: r-lib/actions/setup-tinytex@v1

      - uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.9.2.1' # The pandoc version to download (if necessary) and use.

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}
        
      - name: Install latex packages
        shell: bash
        run: |
          tlmgr install tcolorbox bera nowidow parnotes marginfix titlesec \
          fancyhdr enumitem parskip preprint soul placeins ragged2e ms \
          footmisc changepage caption xstring mathtools pgf environ \
          trimspaces

      - name: Shell GIT env
        shell: bash
        run: |
          SHA=${{ github.event.pull_request.head.sha }}
          echo "github.event.pull_request.head.sha = ${SHA}"
          echo "GITHUB_REPOSITORY = ${GITHUB_REPOSITORY}"
          echo "GITHUB_SHA = ${GITHUB_SHA}"
          echo "GITHUB_REF = ${GITHUB_REF}"
          echo "BRANCH = ${GITHUB_REF#refs/heads/}"
          
      - name: Declare some vars to use on other actions
        id: vars
        shell: bash
        run: |
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "##[set-output name=repository;]$(echo ${GITHUB_REPOSITORY})"
          echo "::set-output name=repository::${GITHUB_REPOSITORY}"
      
      - name: Install BioConductor and BiocCheck
        run: |
          if (!requireNamespace("BiocManager", quietly = TRUE))
            install.packages("BiocManager")
          BiocManager::install(version='devel', ask = FALSE)
          BiocManager::install("BiocCheck", ask = FALSE)
        shell: Rscript {0}
        
      - name: Build and install packages
        run: |
          Rscript -e "remotes::install_github('${{ steps.vars.outputs.repository }}', ref='${{ steps.vars.outputs.sha_short }}')"

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}
        
      - name: BiocCheck
        run: BiocCheck::BiocCheck("check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
